{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\Documents\\\\Thuc Tap\\\\4. Projects\\\\training-1\\\\src\\\\components\\\\Visualize.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport img from '../images/';\n// Sample data for categories and their descriptions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  id: 1,\n  name: 'Modern',\n  description: 'Description for Modern category.'\n}, {\n  id: 2,\n  name: 'Contemporary',\n  description: 'Description for Contemporary category.'\n}, {\n  id: 3,\n  name: 'Minimalist',\n  description: 'Description for Minimalist category.'\n}, {\n  id: 4,\n  name: 'Industrial',\n  description: 'Description for Industrial category.'\n}];\nconst HowCanWeHelp = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  // Function to handle category click\n  const handleCategoryClick = categoryId => {\n    if (selectedCategory === categoryId) {\n      setSelectedCategory(null); // Close the category if already open\n    } else {\n      setSelectedCategory(categoryId); // Open the clicked category\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto py-12 flex flex-col md:flex-row items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"src\\\\images\\\\Mask.png\",\n      alt: \"Mask\",\n      className: \"w-1/2 md:w-1/4 object-contain mx-auto md:mr-0 mb-8 md:mb-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-1/2 md:ml-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6\",\n        children: \"Visualize your ideas with us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-4\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-lg font-semibold text-blue-500 focus:outline-none\",\n            onClick: () => handleCategoryClick(category.id),\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), selectedCategory === category.id && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: category.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(HowCanWeHelp, \"RgHDLEuJ1Ja2GayX64Y/niiK+6s=\");\n_c = HowCanWeHelp;\nexport default HowCanWeHelp;\nvar _c;\n$RefreshReg$(_c, \"HowCanWeHelp\");","map":{"version":3,"names":["React","useState","img","jsxDEV","_jsxDEV","categories","id","name","description","HowCanWeHelp","_s","selectedCategory","setSelectedCategory","handleCategoryClick","categoryId","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","category","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Downloads/Documents/Thuc Tap/4. Projects/training-1/src/components/Visualize.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport img from '../images/'\r\n// Sample data for categories and their descriptions\r\nconst categories = [\r\n  { id: 1, name: 'Modern', description: 'Description for Modern category.' },\r\n  { id: 2, name: 'Contemporary', description: 'Description for Contemporary category.' },\r\n  { id: 3, name: 'Minimalist', description: 'Description for Minimalist category.' },\r\n  { id: 4, name: 'Industrial', description: 'Description for Industrial category.' },\r\n];\r\n\r\nconst HowCanWeHelp = () => {\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  // Function to handle category click\r\n  const handleCategoryClick = (categoryId) => {\r\n    if (selectedCategory === categoryId) {\r\n      setSelectedCategory(null); // Close the category if already open\r\n    } else {\r\n      setSelectedCategory(categoryId); // Open the clicked category\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-12 flex flex-col md:flex-row items-center\">\r\n      {/* Image on the right */}\r\n      <img src=\"src\\images\\Mask.png\" alt=\"Mask\" className=\"w-1/2 md:w-1/4 object-contain mx-auto md:mr-0 mb-8 md:mb-0\" />\r\n\r\n      {/* Content on the left */}\r\n      <div className=\"w-full md:w-1/2 md:ml-4\">\r\n        <h2 className=\"text-2xl font-bold mb-6\">Visualize your ideas with us</h2>\r\n        {/* Categories */}\r\n        <ul className=\"space-y-4\">\r\n          {categories.map(category => (\r\n            <li key={category.id} className=\"cursor-pointer\">\r\n              <button\r\n                className=\"text-lg font-semibold text-blue-500 focus:outline-none\"\r\n                onClick={() => handleCategoryClick(category.id)}\r\n              >\r\n                {category.name}\r\n              </button>\r\n              {/* Display description if the category is selected */}\r\n              {selectedCategory === category.id && (\r\n                <p className=\"text-gray-600\">{category.description}</p>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowCanWeHelp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,YAAY;AAC5B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG,CACjB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,QAAQ;EAAEC,WAAW,EAAE;AAAmC,CAAC,EAC1E;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,WAAW,EAAE;AAAyC,CAAC,EACtF;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,YAAY;EAAEC,WAAW,EAAE;AAAuC,CAAC,EAClF;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,YAAY;EAAEC,WAAW,EAAE;AAAuC,CAAC,CACnF;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA,MAAMY,mBAAmB,GAAIC,UAAU,IAAK;IAC1C,IAAIH,gBAAgB,KAAKG,UAAU,EAAE;MACnCF,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,MAAM;MACLA,mBAAmB,CAACE,UAAU,CAAC,CAAC,CAAC;IACnC;EACF,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,gEAAgE;IAAAC,QAAA,gBAE7EZ,OAAA;MAAKa,GAAG,EAAC,uBAAqB;MAACC,GAAG,EAAC,MAAM;MAACH,SAAS,EAAC;IAA4D;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGnHlB,OAAA;MAAKW,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtCZ,OAAA;QAAIW,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAA4B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEzElB,OAAA;QAAIW,SAAS,EAAC,WAAW;QAAAC,QAAA,EACtBX,UAAU,CAACkB,GAAG,CAACC,QAAQ,iBACtBpB,OAAA;UAAsBW,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC9CZ,OAAA;YACEW,SAAS,EAAC,wDAAwD;YAClEU,OAAO,EAAEA,CAAA,KAAMZ,mBAAmB,CAACW,QAAQ,CAAClB,EAAE,CAAE;YAAAU,QAAA,EAE/CQ,QAAQ,CAACjB;UAAI;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,EAERX,gBAAgB,KAAKa,QAAQ,CAAClB,EAAE,iBAC/BF,OAAA;YAAGW,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEQ,QAAQ,CAAChB;UAAW;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACvD;QAAA,GAVME,QAAQ,CAAClB,EAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWhB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAxCID,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}